@model OrderDetailsViewModel
@{
	ViewData["Title"] = $"Order #{Model.OrderNumber}";
}

<div class="container">
	<div class="row">
		<div class="col-lg-8">
			<!-- Order Header -->
			<div class="card mb-4 shadow-sm">
				<div class="card-body">
					<div class="d-flex justify-content-between align-items-start mb-3">
						<div>
							<h1 class="h3 mb-1">Order #@Model.OrderNumber</h1>
							<p class="text-muted mb-0">@Model.FoodCourtName</p>
						</div>
						<span class="badge status-@Model.OrderStatus.ToLower()">
							@Model.OrderStatus
						</span>
					</div>
					<div class="row">
						<div class="col-md-6">
							<p class="mb-1">
								<i class="bi bi-calendar3"></i>
								Ordered: @Model.OrderDate.ToString("MMM dd, yyyy hh:mm tt")
							</p>
							@if (Model.ScheduledTime.HasValue)
							{
								<p class="mb-1">
									<i class="bi bi-clock"></i>
									Scheduled: @Model.ScheduledTime.Value.ToString("hh:mm tt")
								</p>
							}
						</div>
						@if (Model.IsBulkOrder)
						{
							<div class="col-md-6">
								<span class="badge bg-info">Bulk Order</span>
							</div>
						}
					</div>
				</div>
			</div>

			<!-- Order Items -->
			<div class="card mb-4 shadow-sm">
				<div class="card-header bg-white">
					<h5 class="mb-0">Order Items</h5>
				</div>
				<div class="card-body">
					@foreach (var item in Model.Items)
					{
						<div class="d-flex justify-content-between align-items-start mb-3">
							<div>
								<h6 class="mb-1">
									@item.Name
									@if (item.IsVeg)
									{
										<i class="bi bi-circle-fill text-success ms-1" style="font-size: 0.75rem;"></i>
									}
									else
									{
										<i class="bi bi-circle-fill text-danger ms-1" style="font-size: 0.75rem;"></i>
									}
								</h6>
								<p class="text-muted mb-0">
									₹@item.UnitPrice.ToString("N2") × @item.Quantity
								</p>
								@if (!string.IsNullOrEmpty(item.SpecialInstructions))
								{
									<small class="text-muted">Note: @item.SpecialInstructions</small>
								}
							</div>
							<h6 class="mb-0">₹@item.TotalPrice.ToString("N2")</h6>
						</div>
					}
				</div>
				<div class="card-footer bg-white">
					<div class="row">
						<div class="col-6">Subtotal</div>
						<div class="col-6 text-end">₹@Model.SubTotal.ToString("N2")</div>
					</div>
					<div class="row">
						<div class="col-6">Tax (5%)</div>
						<div class="col-6 text-end">₹@Model.TaxAmount.ToString("N2")</div>
					</div>
					<div class="row fw-bold mt-2">
						<div class="col-6">Total</div>
						<div class="col-6 text-end">₹@Model.TotalAmount.ToString("N2")</div>
					</div>
				</div>
			</div>

			<!-- Order Actions -->
			@if (Model.OrderStatus == "Pending")
			{
				<div class="mb-4">
					<button type="button" class="btn btn-danger" onclick="cancelOrder(@Model.Id)">
						Cancel Order
					</button>
				</div>
			}

			<!-- Feedback Section -->
			@if (Model.OrderStatus == "Completed" && Model.Feedback == null)
			{
				<div class="card mb-4 shadow-sm">
					<div class="card-header bg-white">
						<h5 class="mb-0">Rate Your Experience</h5>
					</div>
					<div class="card-body">
						<form id="feedbackForm">
							<input type="hidden" id="orderId" value="@Model.Id" />
							<div class="mb-3">
								<label class="form-label">Rating</label>
								<div class="rating" id="ratingContainer">
									@for (int i = 5; i >= 1; i--)
									{
										<i class="bi bi-star rating-star" data-rating="@i"></i>
									}
									<input type="hidden" id="rating" name="rating" />
								</div>
							</div>
							<div class="mb-3">
								<label class="form-label">Comment</label>
								<textarea class="form-control" id="comment" rows="3"></textarea>
							</div>
							<button type="submit" class="btn btn-primary">Submit Feedback</button>
						</form>
					</div>
				</div>
			}
			else if (Model.Feedback != null)
			{
				<div class="card mb-4 shadow-sm">
					<div class="card-header bg-white">
						<h5 class="mb-0">Your Feedback</h5>
					</div>
					<div class="card-body">
						<div class="text-warning mb-2">
							@for (int i = 1; i <= 5; i++)
							{
								<i class="bi @(i <= Model.Feedback.Rating ? "bi-star-fill" : "bi-star")"></i>
							}
						</div>
						<p class="mb-1">@Model.Feedback.Comment</p>
						<small class="text-muted">
							Submitted on @Model.Feedback.CreatedAt.ToString("MMM dd, yyyy hh:mm tt")
						</small>
					</div>
				</div>
			}
		</div>

		<!-- Order Timeline -->
		<div class="col-lg-4">
			<div class="card shadow-sm sticky-top" style="top: 20px;">
				<div class="card-header bg-white">
					<h5 class="mb-0">Order Status</h5>
				</div>
				<div class="card-body">
					<div class="timeline">
						<div class="timeline-item @(Model.OrderStatus != "Cancelled" ? "active" : "")">
							<i class="bi bi-circle-fill"></i>
							<div class="timeline-content">
								<h6>Order Placed</h6>
								<p>@Model.OrderDate.ToString("MMM dd, yyyy hh:mm tt")</p>
							</div>
						</div>
						@if (Model.OrderStatus != "Cancelled")
						{
							<div class="timeline-item @(Model.OrderStatus == "Confirmed" || Model.OrderStatus == "Completed" ? "active" : "")">
								<i class="bi bi-circle-fill"></i>
								<div class="timeline-content">
									<h6>Order Confirmed</h6>
								</div>
							</div>
							<div class="timeline-item @(Model.OrderStatus == "Completed" ? "active" : "")">
								<i class="bi bi-circle-fill"></i>
								<div class="timeline-content">
									<h6>Order Completed</h6>
									@if (Model.OrderStatus == "Completed")
									{
										<p>@Model.CompletedAt?.ToString("MMM dd, yyyy hh:mm tt")</p>
									}
								</div>
							</div>
						}
						else
						{
							<div class="timeline-item active cancelled">
								<i class="bi bi-x-circle-fill"></i>
								<div class="timeline-content">
									<h6>Order Cancelled</h6>
									@if (!string.IsNullOrEmpty(Model.CancellationReason))
									{
										<p>Reason: @Model.CancellationReason</p>
									}
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		// Initialize rating functionality
		initializeRating('ratingContainer');

		// Handle feedback submission
		$('#feedbackForm').on('submit', function(e) {
			e.preventDefault();
			const data = {
				orderId: $('#orderId').val(),
				rating: $('#rating').val(),
				comment: $('#comment').val()
			};

			$.post('/Feedback/SubmitOrderFeedback', data)
				.done(response => {
					if (response.success) {
						location.reload();
					} else {
						showAlert(response.message || 'Failed to submit feedback', 'danger');
					}
				})
				.fail(() => {
					showAlert('Failed to submit feedback', 'danger');
				});
		});

		// Handle order cancellation
		function cancelOrder(orderId) {
			if (confirm('Are you sure you want to cancel this order?')) {
				$.post(`/Order/Cancel/${orderId}`)
					.done(() => {
						location.reload();
					})
					.fail(() => {
						showAlert('Failed to cancel order', 'danger');
					});
			}
		}
	</script>
}