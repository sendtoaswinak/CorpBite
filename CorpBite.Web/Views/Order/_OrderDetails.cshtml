@model OrderViewModel

<div class="order-details">
	<!-- Order Header -->
	<div class="border-bottom pb-3 mb-3">
		<div class="row">
			<div class="col-md-6">
				<h6>Order #@Model.OrderNumber</h6>
				<p class="text-muted mb-0">
					<i class="bi bi-calendar2"></i> @Model.OrderDate.ToString("MMM dd, yyyy hh:mm tt")
				</p>
				@if (Model.ScheduledTime.HasValue)
				{
					<p class="text-muted mb-0">
						<i class="bi bi-clock"></i> Scheduled for: @Model.ScheduledTime.Value.ToString("MMM dd, yyyy hh:mm tt")
					</p>
				}
			</div>
			<div class="col-md-6 text-md-end">
				<span class="badge status-@Model.OrderStatus.ToLower()">@Model.OrderStatus</span>
				@if (Model.IsBulkOrder)
				{
					<span class="badge bg-info ms-2">Bulk Order</span>
				}
			</div>
		</div>
	</div>

	<!-- Food Court Info -->
	<div class="mb-4">
		<h6>Food Court</h6>
		<p class="mb-0">@Model.FoodCourtName</p>
	</div>

	<!-- Order Items -->
	<div class="mb-4">
		<h6>Order Items</h6>
		<div class="table-responsive">
			<table class="table">
				<thead>
					<tr>
						<th>Item</th>
						<th class="text-center">Quantity</th>
						<th class="text-end">Unit Price</th>
						<th class="text-end">Total</th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model.Items)
					{
						<tr>
							<td>
								@item.ItemName
								@if (!string.IsNullOrEmpty(item.SpecialInstructions))
								{
									<br>
									<small class="text-muted">
										<i class="bi bi-info-circle"></i> @item.SpecialInstructions
									</small>
								}
							</td>
							<td class="text-center">@item.Quantity</td>
							<td class="text-end">₹@item.UnitPrice.ToString("F2")</td>
							<td class="text-end">₹@item.TotalPrice.ToString("F2")</td>
						</tr>
					}
				</tbody>
				<tfoot>
					<tr>
						<td colspan="3" class="text-end">Subtotal:</td>
						<td class="text-end">₹@Model.SubTotal.ToString("F2")</td>
					</tr>
					<tr>
						<td colspan="3" class="text-end">Tax (5%):</td>
						<td class="text-end">₹@Model.Tax.ToString("F2")</td>
					</tr>
					<tr>
						<td colspan="3" class="text-end"><strong>Total:</strong></td>
						<td class="text-end"><strong>₹@Model.TotalAmount.ToString("F2")</strong></td>
					</tr>
				</tfoot>
			</table>
		</div>
	</div>

	<!-- Order Timeline -->
	<div class="mb-4">
		<h6>Order Timeline</h6>
		<div class="timeline">
			@foreach (var status in Model.StatusHistory.OrderByDescending(s => s.UpdatedAt))
			{
				<div class="timeline-item">
					<div class="timeline-badge @GetStatusBadgeClass(status.Status)">
						<i class="bi @GetStatusIcon(status.Status)"></i>
					</div>
					<div class="timeline-content">
						<h6 class="mb-0">@status.Status</h6>
						<small class="text-muted">
							@status.UpdatedAt.ToString("MMM dd, yyyy hh:mm tt")
						</small>
						@if (!string.IsNullOrEmpty(status.Comment))
						{
							<p class="mb-0 mt-1">@status.Comment</p>
						}
					</div>
				</div>
			}
		</div>
	</div>

	<!-- Actions -->
	<div class="text-end mt-4">
		@if (Model.OrderStatus == "Completed")
		{
			<a asp-controller="Feedback" asp-action="Create" asp-route-orderId="@Model.Id"
			   class="btn btn-outline-primary">
				Leave Feedback
			</a>
		}
		@if (Model.OrderStatus == "Pending" || Model.OrderStatus == "Confirmed")
		{
			<button class="btn btn-danger cancel-order" data-order-id="@Model.Id">
				Cancel Order
			</button>
		}
		<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
	</div>
</div>

@functions {
	private string GetStatusBadgeClass(string status)
	{
		return status.ToLower() switch
		{
			"pending" => "bg-warning",
			"confirmed" => "bg-primary",
			"ready" => "bg-info",
			"completed" => "bg-success",
			"cancelled" => "bg-danger",
			_ => "bg-secondary"
		};
	}

	private string GetStatusIcon(string status)
	{
		return status.ToLower() switch
		{
			"pending" => "bi-hourglass-split",
			"confirmed" => "bi-check-circle",
			"ready" => "bi-bag-check",
			"completed" => "bi-check-all",
			"cancelled" => "bi-x-circle",
			_ => "bi-circle"
		};
	}
}

<style>
	.timeline {
		position: relative;
		padding: 20px 0;
	}

		.timeline::before {
			content: '';
			position: absolute;
			top: 0;
			bottom: 0;
			left: 20px;
			width: 2px;
			background: #e9ecef;
		}

	.timeline-item {
		position: relative;
		margin-bottom: 30px;
		padding-left: 60px;
	}

	.timeline-badge {
		position: absolute;
		left: 10px;
		width: 20px;
		height: 20px;
		border-radius: 50%;
		text-align: center;
		color: white;
		line-height: 20px;
	}

		.timeline-badge i {
			font-size: 12px;
		}

	.timeline-content {
		padding: 10px;
		background: #f8f9fa;
		border-radius: 4px;
	}

	.status-pending {
		background-color: var(--bs-warning);
		color: var(--bs-dark);
	}

	.status-confirmed {
		background-color: var(--bs-primary);
		color: white;
	}

	.status-ready {
		background-color: var(--bs-info);
		color: white;
	}

	.status-completed {
		background-color: var(--bs-success);
		color: white;
	}

	.status-cancelled {
		background-color: var(--bs-danger);
		color: white;
	}
</style>