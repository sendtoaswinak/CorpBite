@model OrderHistoryViewModel
@{
	ViewData["Title"] = "Order History";
	var currentDate = DateTime.Parse("2025-03-14 06:21:35");
}

<div class="container">
	<h2 class="mb-4">Order History</h2>

	<!-- Order Status Cards -->
	<div class="row row-cols-1 row-cols-md-5 g-4 mb-4">
		<div class="col">
			<div class="card text-center h-100">
				<div class="card-body">
					<h6 class="card-title">All Orders</h6>
					<h3 class="mb-0">@Model.Orders.Count()</h3>
				</div>
			</div>
		</div>
		<div class="col">
			<div class="card text-center h-100">
				<div class="card-body">
					<h6 class="card-title">Pending</h6>
					<h3 class="mb-0 text-warning">
						@(Model.StatusCounts.GetValueOrDefault("Pending", 0))
					</h3>
				</div>
			</div>
		</div>
		<div class="col">
			<div class="card text-center h-100">
				<div class="card-body">
					<h6 class="card-title">Confirmed</h6>
					<h3 class="mb-0 text-primary">
						@(Model.StatusCounts.GetValueOrDefault("Confirmed", 0))
					</h3>
				</div>
			</div>
		</div>
		<div class="col">
			<div class="card text-center h-100">
				<div class="card-body">
					<h6 class="card-title">Completed</h6>
					<h3 class="mb-0 text-success">
						@(Model.StatusCounts.GetValueOrDefault("Completed", 0))
					</h3>
				</div>
			</div>
		</div>
		<div class="col">
			<div class="card text-center h-100">
				<div class="card-body">
					<h6 class="card-title">Cancelled</h6>
					<h3 class="mb-0 text-danger">
						@(Model.StatusCounts.GetValueOrDefault("Cancelled", 0))
					</h3>
				</div>
			</div>
		</div>
	</div>

	<!-- Filters -->
	<div class="card shadow-sm mb-4">
		<div class="card-body">
			<form id="filterForm" method="get" class="row g-3">
				<div class="col-md-3">
					<label class="form-label">Status</label>
					<select class="form-select" name="Status" asp-for="Filter.Status">
						<option value="">All Status</option>
						<option value="Pending">Pending</option>
						<option value="Confirmed">Confirmed</option>
						<option value="Ready">Ready</option>
						<option value="Completed">Completed</option>
						<option value="Cancelled">Cancelled</option>
					</select>
				</div>
				<div class="col-md-3">
					<label class="form-label">From Date</label>
					<input type="date" class="form-control" name="FromDate"
						   asp-for="Filter.FromDate" max="@currentDate.ToString("yyyy-MM-dd")">
				</div>
				<div class="col-md-3">
					<label class="form-label">To Date</label>
					<input type="date" class="form-control" name="ToDate"
						   asp-for="Filter.ToDate" max="@currentDate.ToString("yyyy-MM-dd")">
				</div>
				<div class="col-md-3">
					<label class="form-label">Sort By</label>
					<select class="form-select" name="SortBy" asp-for="Filter.SortBy">
						<option value="date_desc">Date (Latest First)</option>
						<option value="date_asc">Date (Oldest First)</option>
						<option value="amount_desc">Amount (High to Low)</option>
						<option value="amount_asc">Amount (Low to High)</option>
					</select>
				</div>
				<div class="col-12">
					<button type="submit" class="btn btn-primary">Apply Filters</button>
					<a href="@Url.Action("History")" class="btn btn-outline-secondary">Reset</a>
				</div>
			</form>
		</div>
	</div>

	<!-- Orders List -->
	@if (!Model.Orders.Any())
	{
		<div class="alert alert-info">
			<i class="bi bi-info-circle"></i> No orders found matching your criteria.
		</div>
	}
	else
	{
		foreach (var order in Model.Orders)
		{
			<div class="card shadow-sm mb-3">
				<div class="card-header bg-light">
					<div class="row align-items-center">
						<div class="col-md-4">
							<h6 class="mb-0">Order #@order.OrderNumber</h6>
							<small class="text-muted">
								@order.OrderDate.ToString("MMM dd, yyyy hh:mm tt")
							</small>
						</div>
						<div class="col-md-3">
							<h6 class="mb-0">@order.FoodCourtName</h6>
						</div>
						<div class="col-md-3 text-md-end">
							<h6 class="mb-0">₹@order.TotalAmount.ToString("F2")</h6>
						</div>
						<div class="col-md-2 text-md-end">
							<span class="badge status-@order.OrderStatus.ToLower()">
								@order.OrderStatus
							</span>
						</div>
					</div>
				</div>
				<div class="card-body">
					<div class="row">
						<div class="col-md-8">
							@foreach (var item in order.Items)
							{
								<div class="d-flex justify-content-between align-items-center mb-2">
									<div>
										<span class="me-2">@item.Quantity x</span>
										<span>@item.ItemName</span>
									</div>
									<span>₹@item.TotalPrice.ToString("F2")</span>
								</div>
							}
						</div>
						<div class="col-md-4 text-md-end">
							@if (order.ScheduledTime.HasValue)
							{
								<small class="text-muted d-block">
									<i class="bi bi-clock"></i> Scheduled for:
									@order.ScheduledTime.Value.ToString("MMM dd, yyyy hh:mm tt")
								</small>
							}
							@if (order.IsBulkOrder)
							{
								<span class="badge bg-info">Bulk Order</span>
							}
						</div>
					</div>
				</div>
				<div class="card-footer bg-white">
					<div class="d-flex justify-content-between align-items-center">
						<div>
							@if (order.OrderStatus == "Pending" || order.OrderStatus == "Confirmed")
							{
								<button class="btn btn-danger btn-sm cancel-order"
										data-order-id="@order.Id">
									Cancel Order
								</button>
							}
						</div>
						<div>
							@if (order.OrderStatus == "Completed")
							{
								<a asp-controller="Feedback" asp-action="Create"
								   asp-route-orderId="@order.Id" class="btn btn-outline-primary btn-sm">
									Leave Feedback
								</a>
							}
							<button class="btn btn-outline-secondary btn-sm"
									data-bs-toggle="modal"
									data-bs-target="#orderDetailsModal"
									data-order-id="@order.Id">
								View Details
							</button>
						</div>
					</div>
				</div>
			</div>
		}

		<!-- Pagination -->
		@if (Model.Filter.Page > 1 || Model.Orders.Count == Model.Filter.PageSize)
		{
			<nav aria-label="Page navigation" class="mt-4">
				<ul class="pagination justify-content-center">
					@if (Model.Filter.Page > 1)
					{
						<li class="page-item">
							<a class="page-link" href="@Url.Action("History", new { page = Model.Filter.Page - 1 })">
								Previous
							</a>
						</li>
					}
					<li class="page-item active">
						<span class="page-link">@Model.Filter.Page</span>
					</li>
					@if (Model.Orders.Count == Model.Filter.PageSize)
					{
						<li class="page-item">
							<a class="page-link" href="@Url.Action("History", new { page = Model.Filter.Page + 1 })">
								Next
							</a>
						</li>
					}
				</ul>
			</nav>
		}
	}
</div>

<!-- Order Details Modal -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Order Details</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body">
				<!-- Content will be loaded dynamically -->
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		$(document).ready(function () {
			// Cancel Order
			$('.cancel-order').click(function () {
				if (confirm('Are you sure you want to cancel this order?')) {
					var orderId = $(this).data('order-id');
					$.post('/Order/Cancel', { id: orderId }, function (data) {
						if (data.success) {
							location.reload();
						} else {
							alert(data.message);
						}
					});
				}
			});

			// Order Details Modal
			$('#orderDetailsModal').on('show.bs.modal', function (e) {
				var orderId = $(e.relatedTarget).data('order-id');
				$(this).find('.modal-body').load('/Order/Details/' + orderId);
			});

			// Date range validation
			$('input[name="FromDate"], input[name="ToDate"]').change(function() {
				var fromDate = $('input[name="FromDate"]').val();
				var toDate = $('input[name="ToDate"]').val();

				if (fromDate && toDate && fromDate > toDate) {
					alert('From date cannot be later than To date');
					$(this).val('');
				}
			});
		});
	</script>
}