@model List<MenuItem>
@{
    ViewData["Title"] = "Manage Menu Items";
    var currentDate = DateTime.Parse("2025-03-14 06:37:38");
    var currentUser = "sendtoaswinak";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="h3 mb-0">Manage Menu Items</h2>
            <p class="text-muted">View and manage menu items across all food courts</p>
        </div>
        <div>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMenuItemModal">
                <i class="bi bi-plus-lg"></i> Add Menu Item
            </button>
        </div>
    </div>

    <!-- Filters -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form id="filterForm" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Food Court</label>
                    <select class="form-select" name="foodCourtId">
                        <option value="">All Food Courts</option>
                        @foreach (var fc in ViewBag.FoodCourts)
                        {
                            <option value="@fc.Id" 
                                    @(Context.Request.Query["foodCourtId"].ToString() == fc.Id.ToString() ? "selected" : "")>
                                @fc.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Category</label>
                    <select class="form-select" name="category">
                        <option value="">All Categories</option>
                        @foreach (var category in Model.Select(m => m.Category).Distinct())
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Food Type</label>
                    <select class="form-select" name="foodType">
                        <option value="">All Types</option>
                        <option value="veg">Vegetarian</option>
                        <option value="nonveg">Non-Vegetarian</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Availability</label>
                    <select class="form-select" name="availability">
                        <option value="">All Status</option>
                        <option value="available">Available</option>
                        <option value="unavailable">Unavailable</option>
                    </select>
                </div>
                <div class="col-12">
                    <button type="submit" class="btn btn-primary">Apply Filters</button>
                    <button type="button" class="btn btn-outline-secondary" id="resetFilters">Reset</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Menu Items Grid -->
    <div class="row row-cols-1 row-cols-md-4 g-4">
        @foreach (var item in Model)
        {
            <div class="col menu-item-card" 
                 data-category="@item.Category" 
                 data-type="@(item.IsVeg ? "veg" : "nonveg")"
                 data-availability="@(item.IsAvailable ? "available" : "unavailable")">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                    {
                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name"
                             style="height: 200px; object-fit: cover;">
                    }
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title mb-0">@item.Name</h5>
                            <div class="form-check form-switch">
                                <input class="form-check-input toggle-availability" type="checkbox" 
                                       data-id="@item.Id"
                                       @(item.IsAvailable ? "checked" : "")>
                            </div>
                        </div>
                        <p class="text-muted mb-2">
                            <i class="bi bi-shop"></i> @item.FoodCourt.Name
                        </p>
                        <p class="card-text">@item.Description</p>

                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="@(item.IsVeg ? "veg-badge" : "non-veg-badge")">
                                @(item.IsVeg ? "Veg" : "Non-Veg")
                            </span>
                            <div class="rating">
                                <i class="bi bi-star-fill text-warning"></i>
                                <span>@item.Rating.ToString("F1")</span>
                                <small class="text-muted">(@item.ReviewCount)</small>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="badge bg-secondary">@item.Category</span>
                            <h5 class="mb-0">₹@item.Price.ToString("N2")</h5>
                        </div>

                        <div class="btn-group w-100">
                            <button type="button" class="btn btn-outline-primary edit-menu-item"
                                    data-id="@item.Id"
                                    data-bs-toggle="modal" 
                                    data-bs-target="#editMenuItemModal">
                                <i class="bi bi-pencil"></i> Edit
                            </button>
                            <button type="button" class="btn btn-outline-danger delete-menu-item"
                                    data-id="@item.Id"
                                    data-name="@item.Name">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Add Menu Item Modal -->
<div class="modal fade" id="addMenuItemModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="addMenuItemForm" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Menu Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" name="Name" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Food Court</label>
                            <select class="form-select" name="FoodCourtId" required>
                                <option value="">Select Food Court</option>
                                @foreach (var fc in ViewBag.FoodCourts)
                                {
                                    <option value="@fc.Id">@fc.Name</option>
                                }
                            </select>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="Description" rows="3"></textarea>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Category</label>
                            <select class="form-select" name="Category" required>
                                <option value="">Select Category</option>
                                <option value="Starters">Starters</option>
                                <option value="Main Course">Main Course</option>
                                <option value="Beverages">Beverages</option>
                                <option value="Desserts">Desserts</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Price (₹)</label>
                            <input type="number" class="form-control" name="Price" min="0" step="0.01" required>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Item Image</label>
                            <input type="file" class="form-control" name="Image" accept="image/*">
                        </div>
                        <div class="col-md-6">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" name="IsVeg" id="addIsVeg">
                                <label class="form-check-label" for="addIsVeg">Vegetarian</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" name="IsAvailable" id="addIsAvailable" checked>
                                <label class="form-check-label" for="addIsAvailable">Available</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Menu Item</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Menu Item Modal -->
<div class="modal fade" id="editMenuItemModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="editMenuItemForm" enctype="multipart/form-data">
                <input type="hidden" name="Id" id="editId">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Menu Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <!-- Similar fields as Add Modal, but with id prefix 'edit' -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            // Toggle Availability
            $('.toggle-availability').change(function () {
                var checkbox = $(this);
                var itemId = checkbox.data('id');

                $.post('/Admin/ToggleMenuItemAvailability', { id: itemId }, function (data) {
                    if (!data.success) {
                        checkbox.prop('checked', !checkbox.prop('checked'));
                        Swal.fire('Error!', 'Failed to update availability.', 'error');
                    }
                });
            });

            // Add Menu Item
            $('#addMenuItemForm').submit(function (e) {
                e.preventDefault();
                var formData = new FormData(this);

                $.ajax({
                    url: '/Admin/AddMenuItem',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire('Success!', 'Menu item added successfully.', 'success')
                                .then(() => location.reload());
                        } else {
                            Swal.fire('Error!', response.message, 'error');
                        }
                    }
                });
            });

            // Edit Menu Item
            $('.edit-menu-item').click(function () {
                var id = $(this).data('id');
                $.get('/Admin/GetMenuItem/' + id, function (data) {
                    // Populate edit form with data
                    $('#editId').val(data.id);
                    $('#editName').val(data.name);
                    $('#editFoodCourtId').val(data.foodCourtId);
                    // ... populate other fields
                });
            });

            // Delete Menu Item
            $('.delete-menu-item').click(function () {
                var id = $(this).data('id');
                var name = $(this).data('name');

                Swal.fire({
                    title: 'Delete Menu Item',
                    text: `Are you sure you want to delete "${name}"?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post('/Admin/DeleteMenuItem', { id: id }, function (response) {
                            if (response.success) {
                                Swal.fire('Deleted!', 'Menu item has been deleted.', 'success')
                                    .then(() => location.reload());
                            } else {
                                Swal.fire('Error!', response.message, 'error');
                            }
                        });
                    }
                });
            });

            // Filter functionality
            $('#filterForm').submit(function (e) {
                e.preventDefault();
                applyFilters();
            });

            $('#resetFilters').click(function () {
                $('#filterForm')[0].reset();
                applyFilters();
            });

            function applyFilters() {
                var foodCourtId = $('select[name="foodCourtId"]').val();
                var category = $('select[name="category"]').val();
                var foodType = $('select[name="foodType"]').val();
                var availability = $('select[name="availability"]').val();

                $('.menu-item-card').each(function () {
                    var item = $(this);
                    var show = true;

                    if (foodCourtId && item.data('foodcourt') != foodCourtId) show = false;
                    if (category && item.data('category') != category) show = false;
                    if (foodType && item.data('type') != foodType) show = false;
                    if (availability && item.data('availability') != availability) show = false;

                    item.toggle(show);
                });
            }
        });
    </script>
}